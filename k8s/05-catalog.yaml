apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog
  namespace: retail-store
  labels:
    app: catalog
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalog
  template:
    metadata:
      labels:
        app: catalog
    spec:
      containers:
      - name: catalog
        image: public.ecr.aws/aws-containers/retail-store-sample-catalog:1.0.0
        ports:
        - containerPort: 8080
        env:
        - name: GIN_MODE
          valueFrom:
            configMapKeyRef:
              name: catalog-config
              key: GIN_MODE
        - name: RETAIL_CATALOG_PERSISTENCE_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: catalog-config
              key: RETAIL_CATALOG_PERSISTENCE_PROVIDER
        - name: RETAIL_CATALOG_PERSISTENCE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: catalog-config
              key: RETAIL_CATALOG_PERSISTENCE_ENDPOINT
        - name: RETAIL_CATALOG_PERSISTENCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: db-password
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: catalog
  namespace: retail-store
spec:
  selector:
    app: catalog
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
